wd()
getwd()
getwd()
setwd()
setwd=("C:\Users\dubey\OneDrive\Desktop\IIT COURSES\DATA-ANYLITCS\ASS\HW-6")
mydata=read.table("HW6_Clerical_Q2.txt",header=T, sep=',')
head(data)
setwd=("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/ASS/HW-6")
data=read.table("data.txt",header=T, sep=',')
data= read.txt(data.txt)
data= read.table("data.txt", header = T, sep=',')
data= read.table("data.txt", header = T, sep=',')
getwd()
data= read.table("data.txt", header = T, sep=',')
head(data)
data= read.table("data.txt", header = T)
head(data)
names(data)
anov= lm(hours~ day)
anov= lm(HOURS~ DAY)
anov= lm(HOURS~DAY)
anov= lm(hours~day)
hours= data$hours
day= data$day
anov= lm(hours~day)
anov= lm(hours~day)
day= data$DAY
day= data$day
hours= data$HOURS
anov= lm(hours~day)
anov= lm(hours~DAY)
anov= lm(hours~DAY)
anov= lm(HOURS~DAY)
hours= data$HOURS
anov= lm(hours~DAY)
hours= data$HOURS
day =  data$DAY
anov= lm(Hours~DAY)
hours= data$HOUR
anov= lm(Hours~DAY)
hours= data$HOUR
anov= lm(Hours~DAY)
hours= data$HOURS
anov= lm(hours~day)
head(anov)
summary(anov)
data= read.table("data.txt", header = T)
> head(data)
data= read.table("data.txt", header = T)
head(data)
hours= data$HOURS
day= data$DAY
anov= lm(hours~day)
summary(aanov
summary(anov)
summary(anov)
install.packages("dummies"")
install.packages("dummies"")
install.packages("dummies)
install.packages("dummies")
install.packages("dummies")
library(dummies)
d1=dummy.data.frame(data, names("day"))
head(d1)
d1=dummy.data.frame(data, names=c("day"))
head(d1)
d1=d1[, -c(1)]
head(d1)
d1=d1[ , -c(1)]
normalize <- function(x) {
+     return ((x - min(x)) / (max(x) - min(x)))
+ }
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
mydata$HOURS_norm<-normalize(mydata$HOURS)
data$HOURS_norm<-normalize(data$HOURS)
data$MAIL_norm<-normalize(data$MAIL)
data$CERT_norm<-normalize(data$CERT)
data$ACC_norm<-normalize(data$ACC)
data$CHANGE_norm<-normalize(data$CHANGE)
data$CHECK_norm<-normalize(data$CHECK)
data$MISC_norm<-normalize(data$MISC)
head(data)
d1=d1[ , -c(1)]
head(d1)
d1=dummy.data.frame(data, names=c("day") head(d1)
d1=dummy.data.frame(data, names=c("day")
head(d1)
dummy=dummy.data.frame(data, names("Day"))
head(dummy)
d2=d1[, -c(1)]
head(d2)
data2=read.table("data.txt", header=T)
head(data2)
dummy=dummy.data.frame(data2, names("Day"))
head(ddummy)
head(dummy)
mail1= cut(Mail, breaks=c(0,1000,1200,10000,18000,), labels=c("x", "y", "z", "k"))
mail1= cut(mail, breaks=c(0,1000,1200,10000,18000,), labels=c("x", "y", "z", "k"))
Mail= data$MAIL
mail1= cut(Mail, breaks=c(0,1000,1200,10000,18000,), labels=c("x", "y", "z", "k"))
mail1= cut(Mail, breaks=c(0,1000,1200,10000,18000), labels=c("x", "y", "z", "k"))
mail1
is.na(data)
head(is.na(data))
data <- subset(data, select = -c(DAY,Mail))
write.csv(d,"C:\Users\dubey\OneDrive\Desktop\IIT COURSES\DATA-ANYLITCS\ASS\HW-6/ITDM_527_HW6_ADITYA_DUBEY_A20432876.csv", row.names = FALSE)
write.csv(d,"C:Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/ASS/HW-6/ITDM_527_HW6_ADITYA_DUBEY_A20432876.csv", row.names = FALSE)
write.csv(data,"C:\Users\dubey\OneDrive\Desktop\IIT COURSES\DATA-ANYLITCS\ASS\HW-6/ITDM_527_HW6_ADITYA_DUBEY_A20432876.csv", row.names = FALSE)
write.csv(data,"C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/ASS/HW-6/ITDM_527_HW6_ADITYA_DUBEY_A20432876.csv", row.names = FALSE)
data
data <- subset(data, select = -c(MAIL))
write.csv(data,"C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/ASS/HW-6/ITDM_527_HW6_ADITYA_DUBEY_A20432876.csv", row.names = FALSE)
data <- subset(data, select = -c(DAY,MAIL))
data <- subset(data, select = -c(MAIL))
help(wd)
help(d)
install.packages("ggplot2")
wd()
getwd()
setwd("C:\Users\dubey\OneDrive\Desktop\IIT COURSES\DATA-ANYLITCS\PROJECT")
setwd("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT")
test = read_csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/test.csv", header = T)
test = read_csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/test.csv", header = T)
test = read_csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/test.csv", header = T)
test = read.csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/test.csv", header = T)
train = read.csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/train.csv", header = T)
store= read.csv("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/store.csv", header = T)
sum(is.na(test));sum(is.na(train));sum(is.na(store))
head(train, 5);head(store, 5);head(test, 5)
sum(is.na(test));sum(is.na(train));sum(is.na(store))
#To know more about columns in each dataframe
str(train);str(test);str(store)
#Summary Statistics
summary(train);summary(test);summary(store)
skim(train);skim(test);skim(store)
install.packages(c("data.table", "forecast", "skimr", "tidyverse", "zoo"))
skim(train);skim(test);skim(store)
skim(train);skim(test);skim(store)
#No. of rows and cols in each dataframe
dim(train);dim(test);dim(store)
#vertical - columns, horizontal - data
glimpse(train);glimpse(test);glimpse(store)
#vertical - columns, horizontal - data
glimpse(train);glimpse(test);glimpse(store)
#date function
data_function <- function(f){
dataframe <- fread(f)
dataframe[, Date:= as.Date(Date)]
return(dataframe)
}
train = data_function("C:/Users/dubey/OneDrive/Desktop/IIT COURSES/DATA-ANYLITCS/PROJECT/rossmann-store-sales/train.csv")
#unique values of Promo column
table(train$Promo)
#unique values of Promo column
table(train$Promo)
#percentage of stores displayed promos in train csv
sum(train$Promo %in% 1 ) / nrow(train);sum(train$Promo %in% 0 ) / nrow(train)
#unique values of StateHoliday column in train csv
table(train$StateHoliday)
#unique values of StateHoliday column in test csv
table(test$StateHoliday)
plot(test$Date, type = "p")
#Visualization of Date Column
plot(train$Date, type = "p")
#
plot(test$Date, type = "p")
#Visualization of Date Column
plot(train$Date, type = "p")
#In test data we need to predict all 856 stores daily
all(table(test$Date) == 856)
#In test data we need to predict all 856 stores daily
all(table(test$Date) == 856)
#fill all missing values
sum(is.na(train))
sum(is.na(train))
train[is.na(train)] <- 1
#fill all missing values
sum(is.na(train))
#histogram for Average sales per store when opened
hist(aggregate(train[Sales != 0]$Sales,
by = list(train[Sales != 0]$Store), mean)$x, xlab="per store" ,border="black",col="green", breaks=100, ylab = "Avg sales",
main = "Average sales per store when opened")
#histogram for Average sales per store when opened
hist(aggregate(train[Sales != 0]$Sales,
by = list(train[Sales != 0]$Store), mean)$x, xlab="per store" ,border="black",col="green", breaks=100, ylab = "Avg sales",
main = "Average sales per store when opened")
#histogram for Average sales per store when opened
hist(aggregate(train[Sales != 0]$Sales,
by = list(train[Sales != 0]$Store), mean)$x, xlab="per store" ,border="black",col="green", breaks=100, ylab = "Avg sales",
main = "Average sales per store when opened")
#histogram for Average sales per store when opened
hist(aggregate(train[Sales != 0]$Sales,
by = list(train[Sales != 0]$Store), mean)$x, xlab="per store" ,border="black",col="green", breaks=100, ylab = "Avg sales",
main = "Average sales per store when opened")
#histogram for Avg customers per store when opened
hist(aggregate(train[Sales != 0]$Customers,
by = list(train[Sales != 0]$Store), mean)$x, breaks = 100, xlab="customers" ,ylab = "Average", border="black",col="green",
main = "Avg customers per store when opened")
#How Schoolholiday is affecting sales
ggplot(train[Sales != 0], aes(x = factor(SchoolHoliday), y = Sales)) +
geom_jitter(alpha = 0.1) +
geom_boxplot(color = "red", outlier.colour = NA, fill = NA, width = 0.4)
boxplot(mpg~cyl,data=train, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(mpg~cyl,data=train, main="Car Milage Data",
x = "factor(SchoolHoliday", y="Sales")
